actors-own[
  need         ;; 0-100
  harvest-rate ;; 0-1
  share-rate   ;; 0-1
  energy       ;; resultat consommé - besoins
  doggybag      ;; variable temporaire pour gérer les partages
]

to update-actors
<<<<<<< HEAD

    ask actors[
        set energy 0
        set doggybag 0
    ]

    ;;harvest
    ask actors [
    set energy harvest-rate * q
    set q (q - energy) ;;() ([q] of patch-here - energy)
    show q
    ]

    ;;share
    ask actors[
        if any? link-neighbors [ ;;Warning si pas de voisin je partage rien
        let share share-rate * energy / count link-neighbors
        ask link-neighbors [
            set doggybag doggybag + share
        ask link-with myself [set thickness share]
        ]
        set energy (energy - share-rate * energy)
        ]
=======
  set needs sum [need] of actors
  
  ask actors[
    set energy 0
    set doggybag 0
  ]
  
  ;;harvest
  ask actors [
    set energy harvest-rate * [q] of patch-here
    set q ([q] of patch-here - energy)
  ]
  
  ;;share
  ask actors[
    if any? link-neighbors [ ;;Warning si pas de voisin je partage rien
      let share share-rate * energy / count link-neighbors
      ask link-neighbors [
        set doggybag doggybag + share
      ]
      set energy (energy - share-rate * energy)
>>>>>>> origin/master
    ]
  ]
  
  ask actors[
    set energy (energy + doggybag)
    set doggybag 0
  ]
  
  ;;consomm & die ?
  ask actors [
    set energy (energy - need)
    set size 2;(max list energy 1) / 50
    if energy < 0 [die]
  ]
 
end
